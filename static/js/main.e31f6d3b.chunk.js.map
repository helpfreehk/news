{"version":3,"sources":["Spinner.js","Header.js","Footer.js","Timeline.js","Home.js","About.js","App.js","serviceWorker.js","index.js"],"names":["Spinner","animation","variant","role","className","MenuTg","props","onClick","toggleMenu","Menu","to","event","target","classList","toggle","Submenu","items","events","length","map","obj","key","id","href","title","Header","state","data","Container","this","React","Component","Footer","scrollToTop","scroll","Timeline","ready","getTitle","find","event_id","date","desc","Home","handleData","setState","dataReady","bind","Tabletop","init","orderby","callback","googleData","simpleSheet","About","App","handleScroll","supportPageOffset","undefined","window","pageXOffset","isCSS1Compat","document","compatMode","x","documentElement","scrollLeft","body","y","pageYOffset","scrollTop","scrollDown","menuOpen","getElementsByClassName","remove","addEventListener","offsetHeight","innerHeight","exact","path","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.e31f6d3b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spinner as SpinnerO } from 'react-bootstrap';\n\nfunction Spinner() {\n  return (\n    <SpinnerO animation=\"border\" variant=\"light\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </SpinnerO>\n  )\n}\n\nexport default Spinner;\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\nimport Spinner from './Spinner.js';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <Container>\n          <div className=\"h-1\">\n            <div className=\"h-logo\">\n              <h1><Link to=\"/\">Free HK</Link></h1>\n            </div>\n            <Menu events={this.props.events} toggleMenu={this.props.toggleMenu} />\n            <MenuTg toggleMenu={this.props.toggleMenu} />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction MenuTg(props) {\n  return (\n    <button className=\"menu-tg\" onClick={props.toggleMenu}></button>\n  )\n}\n\nfunction Menu(props) {\n  const openSubmenuM = (event) => {\n    event.target.classList.toggle(\"open\");\n  }\n  return (\n    <div className=\"menu\">\n      <div className=\"d-xl-none menu-overlap\" onClick={props.toggleMenu}></div>\n      <ul className=\"nav\">\n        <li>\n          <Link to=\"/\">Timeline</Link>\n        </li>\n        <li>\n          <Link to=\"/\">Events</Link><button className=\"submenu-tg\" onClick={openSubmenuM}></button>\n          <Submenu items={props.events} />\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/download\">Download</Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nfunction Submenu(props) {\n  if(props.items.length > 0){\n    return (\n      <div className=\"submenu\">\n        <ul className=\"nav\">\n        {\n          props.items.map(obj => {\n            return (\n              <li key={obj.id}>\n                <a href={\"#/events/\"+obj.title}>{obj.title}</a>\n              </li>\n            )\n          })\n        }\n        </ul>\n      </div>\n    )\n  }\n  return (\n    <div className=\"submenu text-center p-4\">\n      <Spinner />\n    </div>\n  )\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Container } from 'react-bootstrap';\nimport * as Scroll from 'react-scroll';\nimport { animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  scrollToTop = () => {\n    scroll.scrollToTop();\n  }\n\n  render() {\n    return (\n      <div className=\"footer\">\n        <button onClick={this.scrollToTop} className=\"totop\">scroll to top</button>\n        <Container>\n        Email: <a href=\"mailto:helpfreehk@gmail.com\">helpfreehk@gmail.com</a>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { Link } from \"react-router-dom\";\nimport Spinner from './Spinner.js';\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const events = this.props.events;\n    const data = this.props.data;\n    if (this.props.ready) {\n      return (\n        <VerticalTimeline>\n          {\n            data.map(obj => {\n              const getTitle = events.find(event => event.id === obj.event_id).title;\n              return (\n                <VerticalTimelineElement\n                  key={obj.date}\n                  className=\"vertical-timeline-element--work\"\n                  date={obj.date}\n                >\n                  <h3 className=\"vertical-timeline-element-title\"><Link to={\"/d/\"+obj.title}>{obj.title}</Link></h3>\n                  <h6 className=\"vertical-timeline-element-subtitle\"><Link to={\"/events/\"+getTitle}>{getTitle}</Link></h6>\n                  <p>\n                    {obj.desc}\n                  </p>\n                </VerticalTimelineElement>\n              )\n            })\n          }\n        </VerticalTimeline>\n      );\n    }\n    return (\n      <div className=\"text-center\">\n        <br />\n        <Spinner />\n          <br />\n      </div>\n    )\n  }\n}\n\nexport default Timeline;\n","import React from \"react\";\nimport Tabletop from 'tabletop';\nimport Timeline from './Timeline.js';\nimport { Container } from 'react-bootstrap';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      dataReady: 0\n    };\n    this.handleData = this.handleData.bind(this);\n  }\n\n  handleData = () => {\n    this.setState({\n      dataReady: this.state.dataReady + 1\n    })\n  }\n\n  componentDidMount() {\n    Tabletop.init({\n      key: '1CNnSjBUnSRoT_dW5aJwKmzbWqf3_80PhM9RNBMYfgM8',\n      orderby: 'date',\n      callback: googleData => {\n        this.setState({\n          data: googleData\n        });\n        this.handleData();\n      },\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    const { data } = this.state\n    return (\n      <Container>\n\n        <Timeline data={this.state.data} events={this.props.events} ready={this.state.data.length > 0 && this.props.events.length > 0 ? true : false} />\n\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n      About\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport Tabletop from 'tabletop';\nimport { Route, Link } from \"react-router-dom\";\nimport { HashRouter } from 'react-router-dom';\nimport Header from \"./Header.js\";\nimport Footer from \"./Footer.js\";\nimport Home from \"./Home.js\";\nimport About from \"./About.js\";\nimport LoadingBar from 'react-top-loading-bar'\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      scrollDown: 0,\n      events: [],\n      menuOpen: false,\n    }\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n\n    Tabletop.init({\n      key: '1QClBiSbsZKGlzugA1_CUKE8uI9-0PNDb9vkCmrEka3M',\n      callback: googleData => {\n        this.setState({\n          events: googleData\n        });\n      },\n      simpleSheet: true\n    });\n  }\n\n  handleScroll = () => {\n    let supportPageOffset = window.pageXOffset !== undefined;\n    let isCSS1Compat = ((document.compatMode || '') === 'CSS1Compat');\n    let scroll = {\n       x: supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft,\n       y: supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop\n    };\n    this.setState({\n      scrollDown: scroll.y\n    });\n  }\n\n  toggleMenu = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    });\n    document.getElementsByClassName(\"submenu-tg\")[0].classList.remove(\"open\");\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <div className={\"wrapper\" + (this.state.menuOpen ? ' menu-open' : '') + (this.state.scrollDown > 20 ? ' scroll-down' : '') + (this.state.scrollDown >= window.document.body.offsetHeight - window.innerHeight ? ' reach-bottom' : '')}>\n          <Header events={this.state.events} toggleMenu={this.toggleMenu} />\n\n          <main>\n            <Route exact path=\"/\" render={(props) => <Home {...props} events={this.state.events} />} />\n            <Route exact path=\"/about\" render={(props) => <About {...props} />} />\n            <Route path=\"/events/:title\" render={(props) => <Home {...props} events={this.state.events} />} />\n          </main>\n\n          <Footer />\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\nfunction Topic({ match }) {\n  return <h3>Requested Param: {match.params.id}</h3>;\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:id`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}